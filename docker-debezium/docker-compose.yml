networks:
  redpanda_network:
    driver: bridge

volumes:
  redpanda-data: null
  db: null

services:
  debezium:
    image: debezium/connect:latest
    container_name: debezium
    depends_on:
      - redpanda-0
      - postgres
    ports:
      - '8083:8083'
    environment:
      GROUP_ID: "1"
      BOOTSTRAP_SERVERS: "redpanda-0:9092"
      CONFIG_STORAGE_TOPIC: "debezium.configs"
      OFFSET_STORAGE_TOPIC: "debezium.offset"
      STATUS_STORAGE_TOPIC: "debezium.status"
    networks:
      - redpanda_network
  
  mysql:
    image: docker.io/mysql:lts
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: anhduy12
    ports:
      - '3306:3306'
    volumes:
      - db:/var/lib/mysql
      - ./mysql-scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - redpanda_network

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    volumes:
      - ./postgres:/var/lib/postgresql/data
    environment:
      PGDATA: /data/postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: duytc
    ports:
      - '5432:5432'
    networks:
      - redpanda_network

  redpanda-0:
    # NOTE: Please use the latest version here!
    image: docker.redpanda.com/redpandadata/redpanda:v23.3.10
    container_name: redpanda-0
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:29092
      - --advertise-kafka-addr internal://redpanda-0:9092,external://localhost:29092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:28082
      - --advertise-pandaproxy-addr internal://redpanda-0:8082,external://localhost:28082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:28081
      - --rpc-addr redpanda-0:33145
      - --advertise-rpc-addr redpanda-0:33145
      - --mode dev-container
      - --smp 1
      - --default-log-level=info
    volumes:
      - redpanda-data:/var/lib/redpanda/data
    networks:
      - redpanda_network
    ports:
      - '28081:28081'
      - '28082:28082'
      - '29092:29092'
      - '29644:9644'
  
  console:
    container_name: redpanda-console
    image: docker.redpanda.com/redpandadata/console:v2.4.5
    networks:
      - redpanda_network
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda-0:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda-0:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda-0:9644"]
    ports:
      - '1234:8080'
    depends_on:
      - redpanda-0

# tài liệu hướng dẫn connect sick mongodb 
# https://nuculabs.dev/2021/09/19/kafka-connect-mongodb-sink-connector/

# https://github.com/debezium/debezium-examples/tree/main/tutorial